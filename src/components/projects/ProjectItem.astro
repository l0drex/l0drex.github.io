---
import colors from "../../languageColors.json"
import { dateFormatter } from "@utils/general";

interface Props {
  project: any,
  href: string
}

const {project, href} = Astro.props;

const lang = project.languages?.at(0) ?? '';

const fallbackColor = "#646464";
let color: string = fallbackColor;
if (lang != null && lang in colors) {
  color = colors[lang as keyof typeof colors]?.color ?? fallbackColor;
}

// quick fix
if (lang === "C++") {
  color = colors["C++"].color;
}
---

<li class="shadow-md flex-shrink-0 w-52 h-52 rounded-lg py-2 pb-1">
    <a href={href} class="flex flex-col h-full hover:no-underline">
        <h2 class="font-extrabold m-0 mx-2">{project.title}</h2>
        <p class="p-4 m-0 font-mono flex-grow">
          {project.description}
        </p>
        <div class="flex justify-between pt-1 mx-2">
            <span class="m-0 fork">{lang}</span>
            <span class="m-0 lang">{dateFormatter(project.date, true)}</span>
        </div>
    </a>
</li>

<style define:vars={{theme: color}}>
    li {
        color: var(--theme);
    }

    @media (prefers-color-scheme: dark) {
        .project {
            border-color: var(--theme);
            border-width: 2pt;
        }
    }

    li:active {
        background: var(--theme);
        color: var(--background);
    }

    p {
        background: var(--theme);
        color: var(--background);
    }

    :active p {
        background: var(--background);
        color: var(--theme);
    }

    @media (prefers-color-scheme: dark) {
        li:active {
            color: var(--backgroundDark);
        }

        p {
            color: var(--backgroundDark);
        }

        :active p {
            background: var(--backgroundDark);
        }
    }
</style>
