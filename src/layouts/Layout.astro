---
interface Props {
	title: string;
	color: string;
	darkColor?: string;
}

Astro.props.darkColor ??= Astro.props.color;
const { title, color, darkColor } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Personal website of Lorenz Hoffmann" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<meta name="theme-color" content={color} media="(prefers-color-scheme: light)"/>
		<meta name="theme-color" content={darkColor ?? color} media="(prefers-color-scheme: dark)"/>
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global define:vars={{ color, darkColor }}>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: Lato, system-ui, sans-serif;
		background: var(--color);
		margin: 0;
	}

	@media (prefers-color-scheme: dark) {
		html {
			background: var(--darkColor ?? --color);
		}
	}

	body {
		margin: 0;
	}
	code {
		font-family:
			monospace;
	}
</style>
