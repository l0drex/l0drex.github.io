---
import Layout from "../../layouts/Layout.astro";
import Project from "../../components/Project.astro";
import Nav from "../../components/Nav.astro";
import { getCollection, getEntries } from "astro:content";

const repos = (await getCollection('projects').then(c => getEntries(c)))
  .map(r => r.data);

---

<Layout title="/projects/personal" color="lightyellow">
    <Nav direction="column" />
    <main>
        <article>
            <div class="description">
                <h1>My Projects</h1>
                <p>
                    This is a collection of projects I worked on in the past.
                    It includes open source projects I started or where I became the maintainer.
                    Not all of them are in active development, unfortunately there is too little time
                    to take care of all of them all the time.
                    Feel free to check them out, and if you want you can always improve them.
                    You can also include them in your own projects.
                </p>
            </div>
            <ul class="projects">
              {repos.filter(r => !r.fork).map(r =>
                      <Project title={r.name} description={r.description} href={r.html_url} lang={r.language} fork={r.fork} />
              )}
            </ul>
        </article>

        <article>
            <div class="description">
                <h1>Projects I helped</h1>
                <p>
                    These projects have received some sort of help from me.
                    Usually I would fix a bug, improve the styling or contribute translations to german.
                    But sometimes, I even implement new features.
                </p>
            </div>
            <ul class="projects">
              {repos.filter(r => r.fork).map(r =>
                      <Project title={r.name} description={r.description} href={r.html_url} lang={r.language} fork={r.fork} />
              )}
            </ul>
        </article>
    </main>
</Layout>

<style>
article {
    display: flex;
    justify-content: space-evenly;
    min-height: 100vh;
}

article:not(:first-child) {
    margin-top: 5rem;
}

article > * {
    flex: 1 1 0;
}

article:first-child h1 {
    margin-top: 3rem;
}

.description {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    max-height: 100vh;
}

.description > * {
    max-width: calc(1/3 * 100%);
    min-width: 300px;
    margin: 0 auto;
}

article h1 {
    font-size: 3rem;
    font-weight: 800;
    text-align: center;
    margin: 0;
}

article p {
    text-align: justify;
    margin: 0;
}

.projects {
    display: grid;
    grid: auto-flow dense / 1fr 1fr 1fr;
    gap: 1rem;
    padding: 1rem;
}

.card img {
    max-width: 100%;
}

@media (width < 670px) or (800px < width < 950px) {
    .projects {
        grid-template-columns: 1fr 1fr;
    }
}

@media (width < 800px) {
    article {
        flex-direction: column;
    }
}

@media (width < 520px) {
    .projects {
        grid-template-columns: 1fr;
    }
}
</style>